Assignment 9
1. Display all employees who earn sal more that Smith earns.

mysql> select* from emp where sal>(select sal from emp where ename='smith');
+-------+--------+-----------+------+------------+---------+---------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |
+-------+--------+-----------+------+------------+---------+---------+--------+
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1982-12-09 | 3000.00 |    NULL |     20 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |    NULL |     10 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |
|  7876 | ADAMS  | CLERK     | 7788 | 1983-01-12 | 1100.00 |    NULL |     20 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |    NULL |     30 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |    NULL |     20 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 |
+-------+--------+-----------+------+------------+---------+---------+--------+
13 rows in set (0.00 sec)

2. Display all employees who are working in Smith's department.

mysql> select* from emp where deptno=(select deptno from emp where ename='smith');
+-------+-------+---------+------+------------+---------+------+--------+
| EMPNO | ENAME | JOB     | MGR  | HIREDATE   | SAL     | COMM | DEPTNO |
+-------+-------+---------+------+------------+---------+------+--------+
|  7369 | SMITH | CLERK   | 7902 | 1980-12-17 |  800.00 | NULL |     20 |
|  7566 | JONES | MANAGER | 7839 | 1981-04-02 | 2975.00 | NULL |     20 |
|  7788 | SCOTT | ANALYST | 7566 | 1982-12-09 | 3000.00 | NULL |     20 |
|  7876 | ADAMS | CLERK   | 7788 | 1983-01-12 | 1100.00 | NULL |     20 |
|  7902 | FORD  | ANALYST | 7566 | 1981-12-03 | 3000.00 | NULL |     20 |
+-------+-------+---------+------+------------+---------+------+--------+
5 rows in set (0.00 sec)
3. Display all employees who earn salary < Scott and salary > Adams sal.

mysql> select* from emp where sal<(select sal from emp where ename='scott') and sal>(select sal from emp where ename='adams');
+-------+--------+----------+------+------------+---------+---------+--------+
| EMPNO | ENAME  | JOB      | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |
+-------+--------+----------+------+------------+---------+---------+--------+
|  7499 | ALLEN  | SALESMAN | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |
|  7521 | WARD   | SALESMAN | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |
|  7566 | JONES  | MANAGER  | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 |
|  7654 | MARTIN | SALESMAN | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |
|  7698 | BLAKE  | MANAGER  | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 |
|  7782 | CLARK  | MANAGER  | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 |
|  7844 | TURNER | SALESMAN | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |
|  7934 | MILLER | CLERK    | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 |
+-------+--------+----------+------+------------+---------+---------+--------+
8 rows in set (0.00 sec)

4. Display all employees with salary > either Ward's  salary or Blake's sal.

mysql> select* from emp where sal>any(select sal from emp where ename in('ward','blake'));
+-------+--------+-----------+------+------------+---------+--------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM   | DEPTNO |
+-------+--------+-----------+------+------------+---------+--------+--------+
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 | 300.00 |     30 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.00 |   NULL |     20 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850.00 |   NULL |     30 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |   NULL |     10 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1982-12-09 | 3000.00 |   NULL |     20 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |   NULL |     10 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |   0.00 |     30 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |   NULL |     20 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |   NULL |     10 |
+-------+--------+-----------+------+------------+---------+--------+--------+
9 rows in set (0.00 sec)

5. Display all employees who earn more than average sal of dept 10.

mysql> select* from emp where sal>(select avg(sal) from emp where deptno=10);
+-------+-------+-----------+------+------------+---------+------+--------+
| EMPNO | ENAME | JOB       | MGR  | HIREDATE   | SAL     | COMM | DEPTNO |
+-------+-------+-----------+------+------------+---------+------+--------+
|  7566 | JONES | MANAGER   | 7839 | 1981-04-02 | 2975.00 | NULL |     20 |
|  7788 | SCOTT | ANALYST   | 7566 | 1982-12-09 | 3000.00 | NULL |     20 |
|  7839 | KING  | PRESIDENT | NULL | 1981-11-17 | 5000.00 | NULL |     10 |
|  7902 | FORD  | ANALYST   | 7566 | 1981-12-03 | 3000.00 | NULL |     20 |
+-------+-------+-----------+------+------------+---------+------+--------+
4 rows in set (0.00 sec)

6. Display all employees who are working in research department.

mysql> select* from emp e where e.deptno=(select d.deptno from dept d where d.dname='research');
+-------+-------+---------+------+------------+---------+------+--------+
| EMPNO | ENAME | JOB     | MGR  | HIREDATE   | SAL     | COMM | DEPTNO |
+-------+-------+---------+------+------------+---------+------+--------+
|  7369 | SMITH | CLERK   | 7902 | 1980-12-17 |  800.00 | NULL |     20 |
|  7566 | JONES | MANAGER | 7839 | 1981-04-02 | 2975.00 | NULL |     20 |
|  7788 | SCOTT | ANALYST | 7566 | 1982-12-09 | 3000.00 | NULL |     20 |
|  7876 | ADAMS | CLERK   | 7788 | 1983-01-12 | 1100.00 | NULL |     20 |
|  7902 | FORD  | ANALYST | 7566 | 1981-12-03 | 3000.00 | NULL |     20 |
+-------+-------+---------+------+------------+---------+------+--------+
5 rows in set (0.00 sec)

7. Display deptno, sum of salary  and min(sal) for all employees who are managers.

mysql> SELECT deptno, SUM(sal) over(), MIN(sal) over() FROM emp WHERE job='manager' ;
+--------+-----------------+-----------------+
| deptno | SUM(sal) over() | MIN(sal) over() |
+--------+-----------------+-----------------+
|     20 |         8275.00 |         2450.00 |
|     30 |         8275.00 |         2450.00 |
|     10 |         8275.00 |         2450.00 |
+--------+-----------------+-----------------+
3 rows in set (0.00 sec)

8.Create following tables and solve the  queries

1. create table category(cid int primary key auto_increment, cname varchar (15) unique not null, description varchar(30))
-----------------------------------------------------          
cid    cname                   description
------------------------------------------------------
1      chips                   very crunchy
2      chocolate               very chocolaty
3      snacks                  yummy
4      cold drinks             thanda thanda cool cool


mysql>  create table category(cid int primary key auto_increment, cname varchar (15) unique not null, description varchar(30));
Query OK, 0 rows affected (0.04 sec)

mysql> insert into category (cname,description) values('chips','very crunchy'),('chocolate','very chocolaty'),('snacks','yummy'),('cold drinks','thanda thanda cool cool');
Query OK, 4 rows affected (0.01 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> select* from category
    -> ;
+-----+-------------+-------------------------+
| cid | cname       | description             |
+-----+-------------+-------------------------+
|   1 | chips       | very crunchy            |
|   2 | chocolate   | very chocolaty          |
|   3 | snacks      | yummy                   |
|   4 | cold drinks | thanda thanda cool cool |
+-----+-------------+-------------------------+
4 rows in set (0.00 sec)

2.2. create table Product(pid  int primary key, pname varchar (20), price float (6,2) default 20.00, qty int check(qty>0)  
   cid int  ,   sid int,   constraint fk_cid foreign key(cid) references category(cid) on delete set null, 
   constraint fk_sid foreign key(sid) references salesman(sid));
-----------------------------------------------------------------------
   prodid      pname         qty        price       catid        sid 
-----------------------------------------------------------------------
   123         lays          30         30.00        1           12
   111         pepsi         40         50.00        4           11
   134         nachos        50         50.00        1           12
   124         dairy milk    40         60.00        2           14 
   125         pringles      40         60.00        1           14
   213         Sketch Pens   56         150.00       null        11
   167         eraser        90         5.00         null        null


 create table Product(pid  int primary key, pname varchar (20), price float (6,2) default 20.00, qty int check(qty>0),cid int  ,   sid int,   constraint fk_cid foreign key(cid) references category(cid) on delete set null,constraint fk_sid foreign key(sid) references salesman(sid));
Query OK, 0 rows affected, 1 warning (0.04 sec)

mysql> INSERT INTO product (pid, pname, qty, price, cid, sid) VALUES (123, 'lay;s', 30, 30.00, 1, 12),    (111, 'pepsi', 40, 50.00, 4, 11),    (134, 'nachos', 50, 50.00, 1, 12),    (124, 'dairy milk', 40, 60.00, 2, 14),    (125, 'pringles', 40, 60.00, 1, 14),    (213, 'Sketch Pens', 56, 150.00, NULL, 11),    (167, 'eraser', 90, 5.00, NULL, NULL);
Query OK, 7 rows affected (0.01 sec)
Records: 7  Duplicates: 0  Warnings: 0


mysql> select* from product;
+-----+-------------+--------+------+------+------+
| pid | pname       | price  | qty  | cid  | sid  |
+-----+-------------+--------+------+------+------+
| 111 | pepsi       |  50.00 |   40 |    4 |   11 |
| 123 | lay;s       |  30.00 |   30 |    1 |   12 |
| 124 | dairy milk  |  60.00 |   40 |    2 |   14 |
| 125 | pringles    |  60.00 |   40 |    1 |   14 |
| 134 | nachos      |  50.00 |   50 |    1 |   12 |
| 167 | eraser      |   5.00 |   90 | NULL | NULL |
| 213 | Sketch Pens | 150.00 |   56 | NULL |   11 |
+-----+-------------+--------+------+------+------+
7 rows in set (0.00 sec)

3. create table salesman(sid int primary key, sname varchar (15) unique not null, city varchar(15))
--------------------------------- 
sid     sname           city
---------------------------------
11      Rahul           Pune
12      Kirti           Mumbai
13      Prasad          Nashik
14      Arnav           Amravati

create table salesman(sid int primary key, sname varchar (15) unique not null, city varchar(15));
Query OK, 0 rows affected (0.04 sec)

INSERT INTO salesman (sid, sname, city)VALUES     (11, 'Rahul', 'Pune'),    (12, 'Kirti', 'Mumbai'),    (13, 'Prasad', 'Nashik'),    (14, 'Arnav', 'Amravati');
Query OK, 4 rows affected (0.00 sec)
Records: 4  Duplicates: 0  Warnings: 0

mysql> select* from salesman;
+-----+--------+----------+
| sid | sname  | city     |
+-----+--------+----------+
|  11 | Rahul  | Pune     |
|  12 | Kirti  | Mumbai   |
|  13 | Prasad | Nashik   |
|  14 | Arnav  | Amravati |
+-----+--------+----------+
4 rows in set (0.00 sec)

1. List all pid, pname, cid, cname  with category chips
mysql> select p.pid,p.pname,p.cid,c.cname from category c,product p where c.cname='chips' and c.cid=p.cid;
+-----+----------+------+-------+
| pid | pname    | cid  | cname |
+-----+----------+------+-------+
| 123 | lay;s    |    1 | chips |
| 125 | pringles |    1 | chips |
| 134 | nachos   |    1 | chips |
+-----+----------+------+-------+
3 rows in set (0.00 sec)

 
2. Display all products sold by kirti

 mysql> select p.pid,p.pname,p.sid from product p where p.sid=(select s.sid from salesman s where sname='kirti');
+-----+--------+------+
| pid | pname  | sid  |
+-----+--------+------+
| 123 | lay;s  |   12 |
| 134 | nachos |   12 |
+-----+--------+------+
2 rows in set (0.00 sec)
3. Display all salesmen who did not sell any product
mysql> select s.sname,s.sid from salesman s where s.sid not in(select p.sid from product p where p.sid is not null);
+--------+-----+
| sname  | sid |
+--------+-----+
| Prasad |  13 |
+--------+-----+
1 row in set (0.00 sec)
 
4. Display all category for which no product is assigned
mysql> select c.cname,c.cid from category c where c.cid not in(select p.cid from product p where p.cid is not null);
+--------+-----+
| cname  | cid |
+--------+-----+
| snacks |   3 |
+--------+-----+
1 row in set (0.00 sec)
 
5. Display all products to which  category is  not assigned
mysql> select p.pname,p.cid from product p where p.cid is null;
+-------------+------+
| pname       | cid  |
+-------------+------+
| eraser      | NULL |
| Sketch Pens | NULL |
+-------------+------+
2 rows in set (0.00 sec)

 
6. List all salesmen who stays in city where  name starts with P or N
 mysql> select * from salesman where regexp_like(city,'^N.*') or  regexp_like(city,'^P.*');
+-----+--------+--------+
| sid | sname  | city   |
+-----+--------+--------+
|  11 | Rahul  | Pune   |
|  13 | Prasad | Nashik |
+-----+--------+--------+
2 rows in set (0.02 sec)

7. Add new column in salesman table by name credit limit.
mysql> select * from salesman;
+-----+--------+----------+--------------+
| sid | sname  | city     | credit_limit |
+-----+--------+----------+--------------+
|  11 | Rahul  | Pune     |         NULL |
|  12 | Kirti  | Mumbai   |         NULL |
|  13 | Prasad | Nashik   |         NULL |
|  14 | Arnav  | Amravati |         NULL |
+-----+--------+----------+--------------+
4 rows in set (0.00 sec)

 
8. Write a query which will display dept no and dept names to which no employee is assigned dept  . Use emp and dept table.

mysql> select d.deptno,d.dname from dept d where d.deptno not in(select e.deptno from emp e );
+--------+------------+
| deptno | dname      |
+--------+------------+
|     40 | OPERATIONS |
+--------+------------+
1 row in set (0.00 sec)


